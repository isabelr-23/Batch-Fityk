from pywinauto import Application
from pywinauto.keyboard import send_keys
import pywinauto.mouse
import pandas as pd
import os, time, pyperclip

class myPeak:
    def __init__(self, height, center, area, hwhm):
        self.height = height
        self.center = center
        self.area = area
        self.hwhm = hwhm

    def spit(self):
        spit = "F {+}= Gaussian{(}height="+str(self.height)+", center="+str(self.center)+", area="+str(self.area)+", hwhm="+str(self.hwhm)+"{)}"
        return spit

# Import File into Fityk
def LoadSession(file):
    app.Dialog.menu_select(r'Session -> Load Session')
    app.Dialog.ComboBox.type_keys(file, with_spaces=True)
    time.sleep(1)
    send_keys('%o')

# Save session
def saveSession(save):
    time.sleep(1)
    app.Dialog.menu_select(r'Session -> Save Session')
    app.Dialog.ComboBox.type_keys(save, with_spaces=True)
    app.Dialog['Save'].click()

# Ask user for Fityk path
fityk = input("Enter exact path to Fityk: ")

# Ask user for path to main data folder
primary = input(r"Enter exact data folder path (Ex: C:\Users\...): ")

# Ask user for folder name
folder = "\\" + input("Which folder do I sort through? (ex: 'Control\V2 Fits\Manual Processed'): ")

# Ask user for file version
version = input("Enter an underscore (_) followed by the file version (Ex: V1, V2, etc.): ")

# Ask user for number of fixed peaks
fixed = int(input("Enter the exact number of fixed peaks: "))
peaks = []

# Ask user for number of peaks generated by fityk
generated = int(input("Enter the expected number of peaks to be generated by fityk: "))

# Set fixed peaks
for x in range(fixed):
    # Check height
    temp_h = float(input("Enter peak height: "))

    # Check center
    temp_c = float(input("Enter peak center: "))

    # Check area
    temp_a = float(input("Enter peak area: "))

    # Check hwhm
    temp_hwhm = float(input("Enter peak hwhm: "))

    peaks.append(myPeak(temp_h, temp_c, temp_a, temp_hwhm))

# Open fityk
app = Application(backend='uia').start(fityk)

sorted = 0
while sorted==0:
    # Session file
    session_file = primary + folder

    for filename in os.listdir(session_file):
        # Path to main folder (save folder):
        save_fitted = session_file.replace("Manual Processed", "") + filename.replace(".fit", "") + "_Fitted" + version

        LoadSession(session_file + "\\" + filename)

        # Dump fixed peaks into fityk
        for x in range(fixed):
            for_fit = peaks[x].spit()
            print(for_fit)
            app.Dialog.Edit.type_keys(for_fit)
            time.sleep(6)
            send_keys('{ENTER}')

        # Auto add and auto fit loop
        for x in range(generated):
            app.Dialog['auto-add'].click()
            app.Dialog['Start fitting'].click()

        # Save .fit files
        saveSession(save_fitted)

        # Copy info from fityk
        # sort out CSV

    is_sorted = input("Do you want to sort through any other folders (Same peaks will be used.)? (Type Yes or No): ")
    if is_sorted == 'No':
        sorted = 1
    else:
        # Ask user for folder name
        folder = "\\" + input("Which folder do I sort through? (ex: 'Control\V2 Fits\Manual Processed'): ")